# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './Vue/Design/GestionProduitUser.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from Models.Class import Product_management
from functools import partial
from Vue.DialogueBox import DialogueBox

class Ui_UI_Product(Product_management.Product_manager,DialogueBox):
    def setupUi(self, UI_Product):
        UI_Product.setObjectName("UI_Product")
        UI_Product.resize(1169, 755)
        self.centralwidget = QtWidgets.QWidget(UI_Product)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(-1, -1, 1281, 801))
        self.frame.setStyleSheet("background-color: rgb(255,228,54)")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.product_page = QtWidgets.QStackedWidget(self.frame)
        self.product_page.setGeometry(QtCore.QRect(95, 80, 987, 651))
        self.product_page.setStyleSheet("background-color:rgba(0,0,0,0.2);\n"
"border-radius:20px;\n"
"")
        self.product_page.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.product_page.setFrameShadow(QtWidgets.QFrame.Raised)
        self.product_page.setObjectName("product_page")
        self.ajout_produit = QtWidgets.QWidget()
        self.ajout_produit.setStyleSheet("background-color:rgba(0,0,0,0.2);\n"
"border-radius:20px;\n"
"")
        self.ajout_produit.setObjectName("ajout_produit")
        self.enregistrer = QtWidgets.QPushButton(self.ajout_produit)
        self.enregistrer.setGeometry(QtCore.QRect(390, 490, 181, 32))
        self.enregistrer.setStyleSheet("QPushButton{\n"
"background-color:#FFE436;\n"
"border-top-left-radius:20px;\n"
"border-bottom-left-radius:20px;\n"
"color:rgb(255,255,255);\n"
"font:77 21pt \"metropolis\";\n"
"border-radius:5px\n"
"\n"
"\n"
"}\n"
"QPushButton:hover{\n"
"background-color:white;\n"
"border-radius:5px;\n"
"color:rgb(0,0,0);\n"
"font:77 21pt \"metropolis\";\n"
"\n"
"\n"
"}\n"
"")
        self.enregistrer.setObjectName("enregistrer")
        self.list_product_ajout_btn = QtWidgets.QPushButton(self.ajout_produit)
        self.list_product_ajout_btn.setGeometry(QtCore.QRect(500, 30, 221, 51))
        self.list_product_ajout_btn.setStyleSheet("QPushButton{\n"
"background-color:rgb(255,255,255) !important;\n"
"border-radius:5px;\n"
"\n"
"color:rgb(0,0,0);\n"
"font:77 10pt \"metropolis\";\n"
"font-size:14px;\n"
"background-color:none;\n"
"\n"
"}\n"
"QPushButton:hover{\n"
"background-color:white;\n"
"border-radius:5px;\n"
"color:rgb(0,0,0);\n"
"font:77 10pt \"metropolis\";\n"
"\n"
"}\n"
"")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/images/stock-removebg-preview.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.list_product_ajout_btn.setIcon(icon)
        self.list_product_ajout_btn.setIconSize(QtCore.QSize(50, 50))
        self.list_product_ajout_btn.setObjectName("list_product_ajout_btn")
        self.ajout_product_btn = QtWidgets.QPushButton(self.ajout_produit)
        self.ajout_product_btn.setGeometry(QtCore.QRect(230, 30, 221, 51))
        self.ajout_product_btn.setStyleSheet("QPushButton{\n"
"    background-color: rgb(255, 255, 255);\n"
"background-color:#fff;\n"
"border-radius:5px;\n"
"\n"
"color:rgb(0,0,0);\n"
"font:77 10pt \"metropolis\";\n"
"font-size:14px;\n"
"background-color:none;\n"
"\n"
"}\n"
"QPushButton:hover{\n"
"background-color:white;\n"
"border-radius:5px;\n"
"color:rgb(0,0,0);\n"
"font:77 10pt \"metropolis\";\n"
"\n"
"}\n"
"\n"
"\n"
"")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/images/images/ajouter_ventes-removebg-preview.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ajout_product_btn.setIcon(icon1)
        self.ajout_product_btn.setIconSize(QtCore.QSize(50, 50))
        self.ajout_product_btn.setObjectName("ajout_product_btn")
        self.quantiter_field = QtWidgets.QLineEdit(self.ajout_produit)
        self.quantiter_field.setGeometry(QtCore.QRect(280, 360, 411, 41))
        self.quantiter_field.setStyleSheet("border-radius:5px;\n"
"color:black;\n"
"background-color:rgba(255,255,255,0.8)\n"
"\n"
"")
        self.quantiter_field.setObjectName("quantiter_field")
        self.label_13 = QtWidgets.QLabel(self.ajout_produit)
        self.label_13.setGeometry(QtCore.QRect(300, 120, 381, 41))
        self.label_13.setStyleSheet("background-color:none;\n"
"border:none;\n"
"font:90 30pt \"metropolis\";\n"
"font-size:30px;\n"
"color:white")
        self.label_13.setObjectName("label_13")
        self.prix_field = QtWidgets.QLineEdit(self.ajout_produit)
        self.prix_field.setGeometry(QtCore.QRect(280, 300, 411, 41))
        self.prix_field.setStyleSheet("border-radius:5px;\n"
"color:black;\n"
"background-color:rgba(255,255,255,0.8)\n"
"\n"
"")
        self.prix_field.setObjectName("prix_field")
        self.product_field = QtWidgets.QLineEdit(self.ajout_produit)
        self.product_field.setGeometry(QtCore.QRect(280, 190, 411, 41))
        self.product_field.setStyleSheet("border-radius:5px;\n"
"color:black;\n"
"background-color:rgba(255,255,255,0.8)\n"
"\n"
"")
        self.product_field.setObjectName("product_field")
        self.categorie_combo = QtWidgets.QComboBox(self.ajout_produit)
        self.categorie_combo.setGeometry(QtCore.QRect(280, 250, 411, 41))
        self.categorie_combo.setStyleSheet("border-radius:5px;\n"
"color:black;\n"
"background-color:rgba(255,255,255,0.8)\n"
"\n"
"")
        self.categorie_combo.setObjectName("categorie_combo")
        self.categorie_combo.addItem("")
        self.eta_combo = QtWidgets.QComboBox(self.ajout_produit)
        self.eta_combo.setGeometry(QtCore.QRect(280, 420, 411, 41))
        self.eta_combo.setStyleSheet("border-radius:5px;\n"
"color:black;\n"
"background-color:rgba(255,255,255,0.8)\n"
"\n"
"")
        self.eta_combo.setObjectName("eta_combo")
        self.eta_combo.addItem("")
        self.product_page.addWidget(self.ajout_produit)
        self.list_produit = QtWidgets.QWidget()
        self.list_produit.setStyleSheet("background-color:rgba(0,0,0,0.2);\n"
"border-radius:20px;\n"
"")
        self.list_produit.setObjectName("list_produit")
        self.ajouts_product_list_btn = QtWidgets.QPushButton(self.list_produit)
        self.ajouts_product_list_btn.setGeometry(QtCore.QRect(220, 30, 221, 51))
        self.ajouts_product_list_btn.setStyleSheet("QPushButton{\n"
"background-color:rgb(255,255,255);\n"
"border-radius:5px;\n"
"\n"
"color:rgb(0,0,0);\n"
"font:77 10pt \"metropolis\";\n"
"font-size:14px;\n"
"background-color:none;\n"
"\n"
"}\n"
"QPushButton:hover{\n"
"background-color:white;\n"
"border-radius:5px;\n"
"color:rgb(0,0,0);\n"
"font:77 10pt \"metropolis\";\n"
"\n"
"}\n"
"\n"
"\n"
"")
        self.ajouts_product_list_btn.setIcon(icon1)
        self.ajouts_product_list_btn.setIconSize(QtCore.QSize(50, 50))
        self.ajouts_product_list_btn.setObjectName("ajouts_product_list_btn")
        self.list_produit_btn = QtWidgets.QPushButton(self.list_produit)
        self.list_produit_btn.setGeometry(QtCore.QRect(490, 30, 221, 51))
        self.list_produit_btn.setStyleSheet("QPushButton{\n"
"background-color: white;\n"
"border-radius:5px;\n"
"\n"
"color:rgb(0,0,0);\n"
"font:77 10pt \"metropolis\";\n"
"font-size:14px;\n"
"background-color:none;\n"
"\n"
"}\n"
"QPushButton:hover{\n"
"background-color:white;\n"
"border-radius:5px;\n"
"color:rgb(0,0,0);\n"
"font:77 10pt \"metropolis\";\n"
"\n"
"}\n"
"")
        self.list_produit_btn.setIcon(icon)
        self.list_produit_btn.setIconSize(QtCore.QSize(50, 50))
        self.list_produit_btn.setObjectName("list_produit_btn")
        self.label_14 = QtWidgets.QLabel(self.list_produit)
        self.label_14.setGeometry(QtCore.QRect(290, 120, 381, 41))
        self.label_14.setStyleSheet("background-color:none;\n"
"border:none;\n"
"font:90 30pt \"metropolis\";\n"
"font-size:30px;\n"
"color:white")
        self.label_14.setObjectName("label_14")
        self.product_table = QtWidgets.QTableWidget(self.list_produit)
        self.product_table.setGeometry(QtCore.QRect(40, 220, 913, 411))
        self.product_table.setObjectName("product_table")
        self.product_table.setColumnCount(7)
        self.product_table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        item.setBackground(QtGui.QColor(255, 255, 255))
        self.product_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setBackground(QtGui.QColor(255, 255, 255))
        self.product_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setBackground(QtGui.QColor(255, 255, 255))
        self.product_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setBackground(QtGui.QColor(255, 255, 255))
        self.product_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setBackground(QtGui.QColor(255, 255, 255))
        self.product_table.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setBackground(QtGui.QColor(255, 255, 255))
        self.product_table.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        item.setBackground(QtGui.QColor(255, 255, 255))
        self.product_table.setHorizontalHeaderItem(6, item)
        self.search = QtWidgets.QLineEdit(self.list_produit)
        self.search.setGeometry(QtCore.QRect(660, 170, 271, 41))
        self.search.setStyleSheet("font-size: 18px;\n"
"border-radius:5px;\n"
"background-color: #fff;")
        self.search.setCursorPosition(0)
        self.actualiser = QtWidgets.QPushButton(self.list_produit)
        self.actualiser.setObjectName(u"actualiser")
        self.actualiser.setGeometry(QtCore.QRect(38, 170, 211, 41))
        self.actualiser.setStyleSheet(u"background: #fff;\n"
                                      "border-radius: 5px;")
        self.search.setObjectName("search")
        self.product_page.addWidget(self.list_produit)
        self.widget_9 = QtWidgets.QWidget(self.frame)
        self.widget_9.setGeometry(QtCore.QRect(0, 0, 221, 71))
        self.widget_9.setStyleSheet("background-color:white;\n"
"border:none;\n"
"border-radius:15px\n"
"")
        self.widget_9.setObjectName("widget_9")
        self.label_32 = QtWidgets.QLabel(self.widget_9)
        self.label_32.setGeometry(QtCore.QRect(110, 10, 101, 41))
        self.label_32.setStyleSheet("border:none;\n"
"font:90 18pt \"metropolis\";")
        self.label_32.setObjectName("label_32")
        self.pushButton_12 = QtWidgets.QPushButton(self.widget_9)
        self.pushButton_12.setGeometry(QtCore.QRect(10, 0, 111, 61))
        self.pushButton_12.setStyleSheet("QPushButton{\n"
"background-color:none;\n"
"border-top-left-radius:20px;\n"
"border-bottom-left-radius:20px;\n"
"color:rgb(0,0,0);\n"
"font:77 10pt \"metropolis\";\n"
"font-size:14px;\n"
"\n"
"}\n"
"QPushButton:hover{\n"
"background-color:white;\n"
"border-top-left-radius:20px;\n"
"border-bottom-left-radius:20px;\n"
"color:rgb(0,0,0);\n"
"font:77 10pt \"metropolis\";\n"
"font-size:13px;\n"
"\n"
"}\n"
"\n"
"\n"
"")
        self.pushButton_12.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/images/images/compte-removebg-preview.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_12.setIcon(icon2)
        self.pushButton_12.setIconSize(QtCore.QSize(120, 110))
        self.pushButton_12.setObjectName("pushButton_12")
        UI_Product.setCentralWidget(self.centralwidget)

        self.retranslateUi(UI_Product)
        self.product_page.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(UI_Product)

    def retranslateUi(self, UI_Product):
        _translate = QtCore.QCoreApplication.translate
        UI_Product.setWindowTitle(_translate("UI_Product", "MainWindow"))
        self.enregistrer.setText(_translate("UI_Product", "Enregistrer"))
        self.list_product_ajout_btn.setText(_translate("UI_Product", "Liste des produits"))
        self.ajout_product_btn.setText(_translate("UI_Product", "Ajouter un produit"))
        self.quantiter_field.setPlaceholderText(_translate("UI_Product", "  Quantité"))
        self.label_13.setText(_translate("UI_Product", "AJOUTER UN PRODUIT"))
        self.prix_field.setPlaceholderText(_translate("UI_Product", "  Prix"))
        self.product_field.setPlaceholderText(_translate("UI_Product", "  Produit"))
        self.categorie_combo.setItemText(0, _translate("UI_Product", " Sucrerie"))
        self.eta_combo.setItemText(0, _translate("UI_Product", "Disponible"))
        self.ajouts_product_list_btn.setText(_translate("UI_Product", "Ajouter un produit"))
        self.list_produit_btn.setText(_translate("UI_Product", "Liste des produits"))
        self.label_14.setText(_translate("UI_Product", "AJOUTER UN PRODUIT"))
        item = self.product_table.horizontalHeaderItem(0)
        item.setText(_translate("UI_Product", "ID"))
        item = self.product_table.horizontalHeaderItem(1)
        item.setText(_translate("UI_Product", "Produit"))
        item = self.product_table.horizontalHeaderItem(2)
        item.setText(_translate("UI_Product", "Categorie"))
        item = self.product_table.horizontalHeaderItem(3)
        item.setText(_translate("UI_Product", "Qantiter"))
        item = self.product_table.horizontalHeaderItem(4)
        item.setText(_translate("UI_Product", "PU"))
        item = self.product_table.horizontalHeaderItem(5)
        item.setText(_translate("UI_Product", "Etat"))
        item = self.product_table.horizontalHeaderItem(6)
        item.setText(_translate("UI_Product", "Montant"))
        self.search.setPlaceholderText(_translate("UI_Product", "       RECHERCHE"))
        self.label_32.setText(_translate("UI_Product", "Connecté"))
        self.actualiser.setText(QtCore.QCoreApplication.translate("UI_Product", u"Actualiser", None))

        self.actualiser.clicked.connect(self.showList)
        self.list_product_ajout_btn.clicked.connect(self.showList)
        self.ajouts_product_list_btn.clicked.connect(self.showAdd)
        self.search.textChanged.connect(self.searchTable)
        self.enregistrer.clicked.connect(lambda :self.create_product({
            'nom_produit': self.product_field.text(),
            'categorie': self.categorie_combo.currentText(),
            'prix': self.prix_field.text(),
            'quantiter': self.quantiter_field.text(),
            'etat': self.eta_combo.currentText(),
        }))


    def closeView(self):
        QtWidgets.QWidget.close(self)
    def showAdd(self):
        self.product_page.setCurrentWidget(self.ajout_produit)
    def showList(self):
        self.product_page.setCurrentWidget(self.list_produit)
        self.list = self.All_product_list()
        self.product_table.setRowCount(len(self.list))
        self.product_table.setColumnCount(len(self.list) + 7)
        if self.list != None:
            for row in range(len(self.list)):
                    for column in range(len(self.list[row])):
                        # pass
                            item = QtWidgets.QTableWidgetItem(str(self.list[row][column]))
                            # print('dfghj LIST: ',len(self.data), ' ', len(self.data[row]),' ', column, " => ", item.text() )
                            self.product_table.setItem(row, column, item)
                            # # Création d'un QPushButton pour chaque cellule
                            # # Ajout de l'objet QPushButton dans la cellule de la table
                            self.update_btn = QtWidgets.QPushButton("Edite")
                            self.delete_btn = QtWidgets.QPushButton("Delete")
                            #
                            self.update_btn.setStyleSheet("QPushButton{\n"
                                                 "background-color: #10e8ff;\n"
                                                 "color:rgb(255,255,255);\n"
                                                 "border-radius:50\n"
                                                 "\n"
                                                 "\n"
                                                 "}\n")
                            self.delete_btn.setStyleSheet("QPushButton{\n"
                                                  "background-color:#d4820e;\n"
                                                  "color:rgb(255,255,255);\n"
                                                  "border-radius:50\n"
                                                  "\n"
                                                  "\n"
                                                  "}\n")

                            self.product_table.setCellWidget(row, 7, self.update_btn)
                            self.product_table.setCellWidget(row, 8, self.delete_btn)
                            self.delete_btn.clicked.connect(partial(self.delete_user_method, self.delete_btn))
                            self.update_btn.clicked.connect(partial(self.update_user_method, self.update_btn))
                    print('===========================================================')

    def delete_user_method(self,btn):
        print('delete')
        if btn:
            button = btn.sender()
            # Trouver la ligne correspondante dans le QTableWidget
            index = self.product_table.indexAt(button.pos())
            if index.isValid():
                row = index.row()
                col = index.column()
                item = self.product_table.item(row, 1)

                if item is not None:
                    produit = item.text()
                    # self.data_item.append(text)
                    print('=>',produit)
                    result = self.delete_product(produit)
                    if result:
                        self.product_table.removeRow(row)
                    else:
                        print("Voulez-vous pas suprimer davantage!!!")

        pass

    def update_user_method(self,btn):
        print('update')
        if btn:
            updateBtn = btn.sender()
            update_data = []
            index = self.product_table.indexAt(updateBtn.pos())
            if index.isValid():
                row = index.row()
                col = index.column()
                for i in range(7):
                    item = self.product_table.item(row, i)
                    print(item.text())
                    update_data.append(item.text())
                print(update_data)

                self.editeBox(update_data)

        pass
    def searchTable(self):
        # Récupération de la chaîne de recherche
        searchText = self.search.text().lower()

        # Recherche des QTableWidgetItem correspondants
        items = self.product_table.findItems(searchText, QtCore.Qt.MatchContains)

        # Sélection des lignes correspondantes
        self.product_table.clearSelection()
        for item in items:
            if item != None:
                item.setSelected(True)
            else:
                return False


import ressource_rc


class ui_user(QtWidgets.QMainWindow):
    def __init__(self):
        QtWidgets.QMainWindow.__init__(self)
        self.ui = Ui_UI_Product()
        self.ui.setupUi(self)
        self.ui.product_page.setCurrentWidget(self.ui.ajout_produit)
        self.center()

    def center(self):
        # récupère la taille de l'écran
        screen_size = QtWidgets.QDesktopWidget().screenGeometry(-1)
        # récupère la taille de la fenêtre
        window_size = self.geometry()
        # calcule les coordonnées pour centrer la fenêtre
        x = (screen_size.width() - window_size.width()) / 2
        y = (screen_size.height() - window_size.height()) / 2
        # définit les nouvelles coordonnées pour la fenêtre
        self.move(int(x), int(y))





if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    AjouterCompte = QtWidgets.QMainWindow()
    ui = ui_user()
    ui.show()
    sys.exit(app.exec_())
